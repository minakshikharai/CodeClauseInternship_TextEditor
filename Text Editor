from tkinter import  *
from tkinter import filedialog
from tkinter import font

root = Tk()
root.title("Text Editor")

# set variable for open file name
global open_status_name
open_status_name = False

#creating new file function
def new_file():
    my_text.delete("1.0",END)
    #update status bars
    root.title('New File - Text Editor')
    status_bar.config(text="New File     ")

    global open_status_name
    open_status_name = False

# creating open file function
def open_file():
    #delete previous text
    my_text.delete("1.0", END)
     # grab filename
    text_file = filedialog.askopenfilename(title="Open File", filetypes= (("Text Files","*.txt"),("HTML Files","*.html")

                                                                         ,("Python Files","*.py"),("All Files","*.*")))
    #check to see if there is a file name
    if text_file:
        #make filename - global so we can access it later
         global open_status_name
         open_status_name = text_file
    # update status bar
    name = text_file
    status_bar.config(text=f'{name}   ')
    root.title(f'{name} - Text Editor')
    text_file = open(text_file,'r')
    stuff = text_file.read()
    my_text.insert(END,stuff)
    text_file.close()

# save as file
def  save_as_file():
    text_file = filedialog.asksaveasfilename(defaultextension=".*",title=' Save File',filetypes=(("Text Files","*.txt"),
                                                ("HTML Files","*.html"),("Python Files","*.py"),("All Files","*.*")))
    if text_file:
        #update Status Bars
        name= text_file
        status_bar.config(text=f'Saved: {name}   ')
        root.title(f'{name} - Text Editor')
        #save the file
        text_file = open(text_file,'w')
        text_file.write(my_text.get(1.0, END))
        #close the file
        text_file.close()

# save file
def save_file():
    global open_status_name
    if open_status_name:
        # save the file
        text_file = open(open_status_name,'w')
        text_file.write(my_text.get(1.0, END))
        # close the file
        text_file.close()
        status_bar.config(text=f'Saved: {open_status_name}   ')
    else:
        save_as_file()

#creating Main frame
my_frame = Frame(root)
my_frame.pack(pady=5)

# creating scroll for the Text box
text_scroll =Scrollbar(my_frame)
text_scroll.pack(side=RIGHT, fill=Y)

#creating text box
my_text= Text(my_frame, width=97, height= 25, font =("Helvetica",16),selectbackground="Yellow",
              selectforeground="black",undo = True,yscrollcommand=text_scroll.set)
my_text.pack()

# configure our scrollbar
text_scroll.config(command=my_text.yview)

#creating menu
my_menu = Menu(root)
root.config(menu=my_menu)

#Add file menu
file_menu = Menu(my_menu,tearoff=False)
my_menu.add_cascade(label="File", menu=file_menu)
file_menu.add_command(label="New", command= new_file)
file_menu.add_command(label="Open", command= open_file)
file_menu.add_command(label="Save",command= save_file)
file_menu.add_command(label="Save AS.. ",command=save_as_file)
file_menu.add_separator()
file_menu.add_command(label="Exit",command=root.quit)

#Add Edit Menu
edit_menu = Menu(my_menu,tearoff=False)
my_menu.add_cascade(label="Edit", menu=edit_menu)
edit_menu.add_command(label="Cut")
edit_menu.add_command(label="Copy")
edit_menu.add_command(label="Paste")
edit_menu.add_command(label="Undo")
edit_menu.add_command(label="Redo")

# Add Status bar to bottom of app
status_bar = Label(root, text= 'Ready   ',anchor= E)
status_bar.pack(fill=X, side = BOTTOM,ipady=5)

root.mainloop()






